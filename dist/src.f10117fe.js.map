{"version":3,"sources":["src/helpers.ts","src/read-image.ts","src/detect-edges.ts","src/detect-lines.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["const createContext = () => {\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) throw new Error(\"2d canvas not implemented\");\n  return { canvas, ctx };\n};\n\nexport { createContext };\n","import { createContext } from \"./helpers\";\nimport { BitMatrix } from \"./BitMatrix\";\n\nconst loadImage = (url: string): Promise<HTMLImageElement> =>\n  new Promise((res, rej) => {\n    const image = new Image();\n    image.crossOrigin = \"Anonymous\";\n    image.src = url;\n    image.onload = () => {\n      res(image);\n    };\n    image.onerror = rej;\n  });\n\nconst readImage = async (url: string) => {\n  const { ctx, canvas } = createContext();\n  const img = await loadImage(url);\n  canvas.width = img.width;\n  canvas.height = img.height;\n  ctx.drawImage(img, 0, 0);\n  const { data } = ctx.getImageData(0, 0, img.width, img.height);\n  return {\n    data,\n    width: img.width,\n    height: img.height\n  };\n};\n\nconst writeImage = (\n  { ctx, canvas }: { ctx: CanvasRenderingContext2D; canvas: HTMLCanvasElement },\n  arr: Uint8ClampedArray,\n  width: number,\n  height: number\n) => {\n  canvas.width = width;\n  canvas.height = height;\n  const imgData = new ImageData(arr, width, height);\n  ctx.putImageData(imgData, 0, 0);\n};\n\nconst writeImageFromBitMatrix = (\n  context: { ctx: CanvasRenderingContext2D; canvas: HTMLCanvasElement },\n  matrix: BitMatrix,\n  width: number,\n  height: number\n) => {\n  const arr = new Uint8ClampedArray(width * height * 4);\n\n  for (let x = 0; x < width; x++) {\n    for (let y = 0; y < height; y++) {\n      const i = (x + y * width) * 4;\n      const val = +matrix.get(x, y) * 255;\n      arr[i] = val;\n      arr[i + 1] = val;\n      arr[i + 2] = val;\n      arr[i + 3] = 255;\n    }\n  }\n\n  writeImage(context, arr, width, height);\n};\n\nexport { writeImageFromBitMatrix, readImage, writeImage };\n","const generateMatrix = (w: number, h: number, initialValue: number) => {\n  const matrix = [] as number[][];\n  for (let x = 0; x < w; x++) {\n    matrix[x] = [];\n    for (let y = 0; y < h; y++) {\n      matrix[x][y] = initialValue;\n    }\n  }\n  return matrix;\n};\n\nclass GrayImageData {\n  public data: number[][];\n\n  constructor(public width: number, public height: number) {\n    this.data = generateMatrix(width, height, 0);\n  }\n\n  loadCanvas(canvas: HTMLCanvasElement) {\n    const ctx = canvas.getContext(\"2d\");\n    const { data, width, height } = ctx!.getImageData(\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n    this.data = generateMatrix(width, height, 0);\n    this.width = width;\n    this.height = height;\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        const i = (y * width + x) * 4;\n        const r = data[i];\n        const g = data[i + 1];\n        const b = data[i + 2];\n        this.data[x][y] = Math.round(0.298 * r + 0.586 * g + 0.114 * b);\n      }\n    }\n  }\n\n  getNeighbours(x: number, y: number, size: number) {\n    const neighbours = [] as number[][];\n    for (let i = 0; i < size; i++) {\n      neighbours[i] = [];\n      for (let j = 0; j < size; j++) {\n        const trnsX = x - (size - 1) / 2 + i;\n        const trnsY = y - (size - 1) / 2 + j;\n        if (this.data[trnsX] && this.data[trnsX][trnsY]) {\n          neighbours[i][j] = this.data[trnsX][trnsY];\n        } else {\n          neighbours[i][j] = 0;\n        }\n      }\n    }\n    return neighbours;\n  }\n\n  eachPixel(\n    neighbourSize: number,\n    fn: (x: number, y: number, current: number, neighbours: number[][]) => void\n  ) {\n    for (let x = 0; x < this.width; x++) {\n      for (let y = 0; y < this.height; y++) {\n        const current = this.data[x][y];\n        const neighbours = this.getNeighbours(x, y, neighbourSize);\n        fn(x, y, current, neighbours);\n      }\n    }\n  }\n\n  toImageDataArray() {\n    const { width, height, data } = this;\n    const arr = new Uint8ClampedArray(width * height * 4);\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        const i = (y * width + x) * 4;\n        const n = data[x][y];\n        arr[i] = n;\n        arr[i + 1] = n;\n        arr[i + 2] = n;\n        arr[i + 3] = 255;\n      }\n    }\n    return arr;\n  }\n\n  copy() {\n    const { width, height, data } = this;\n    const copied = new GrayImageData(width, height);\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        copied.data[x][y] = data[x][y];\n      }\n    }\n    copied.width = width;\n    copied.height = height;\n    return copied;\n  }\n\n  drawOn(canvas: HTMLCanvasElement) {\n    const ctx = canvas.getContext(\"2d\");\n    const imgData = new ImageData(\n      this.toImageDataArray(),\n      canvas.width,\n      canvas.height\n    );\n    ctx!.putImageData(imgData, 0, 0);\n  }\n\n  fill(color: number) {\n    const { width, height, data } = this;\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        data[x][y] = color;\n      }\n    }\n  }\n}\n\nconst gaussianBlur = (imgData: GrayImageData, sigma = 1.4, size = 3) => {\n  const kernel = generateKernel(sigma, size);\n  const copy = imgData.copy();\n  copy.fill(0);\n  imgData.eachPixel(size, (x, y, _, neighbours) => {\n    let i = 0;\n    while (i <= size - 1) {\n      let j = 0;\n      while (j <= size - 1) {\n        copy.data[x][y] += neighbours[i][j] * kernel[i][j];\n        j++;\n      }\n      i++;\n    }\n  });\n  return copy;\n};\n\nconst generateKernel = (sigma: number, size: number) => {\n  const s = sigma;\n  const e = 2.718;\n  const kernel = generateMatrix(size, size, 0);\n  let sum = 0;\n  for (let i = 0; i < size; i++) {\n    const x = -(size - 1) / 2 + i;\n    for (let j = 0; j < size; j++) {\n      const y = -(size - 1) / 2 + j;\n      const gaussian =\n        (1 / (2 * Math.PI * s * s)) *\n        Math.pow(e, -(x * x + y * y) / (2 * s * s));\n      kernel[i][j] = gaussian;\n      sum += gaussian;\n    }\n  }\n  // normalization\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      kernel[i][j] = +(kernel[i][j] / sum).toFixed(3);\n    }\n  }\n  console.log(\"kernel\", kernel);\n  return kernel;\n};\n\nconst sobel = (imgData: GrayImageData) => {\n  const yFiler = [\n    [-1, 0, 1],\n    [-2, 0, 2],\n    [-1, 0, 1]\n  ];\n  const xFiler = [\n    [-1, -2, -1],\n    [0, 0, 0],\n    [1, 2, 1]\n  ];\n  const copy = imgData.copy();\n  copy.fill(0);\n  imgData.eachPixel(3, (x, y, current, neighbours) => {\n    let ghs = 0;\n    let gvs = 0;\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        ghs += yFiler[i][j] * neighbours[i][j];\n        gvs += xFiler[i][j] * neighbours[i][j];\n      }\n    }\n    copy.data[x][y] = Math.sqrt(ghs * ghs + gvs * gvs);\n  });\n  return copy;\n};\n\nconst nonMaximumSuppression = (imgData: GrayImageData) => {\n  const copy = imgData.copy();\n  copy.fill(0);\n  // discard non-local maximum\n  imgData.eachPixel(3, (x, y, c, n) => {\n    if (n[1][1] > n[0][1] && n[1][1] > n[2][1]) {\n      copy.data[x][y] = n[1][1];\n    } else {\n      copy.data[x][y] = 0;\n    }\n    if (n[1][1] > n[0][2] && n[1][1] > n[2][0]) {\n      copy.data[x][y] = n[1][1];\n    } else {\n      copy.data[x][y] = 0;\n    }\n    if (n[1][1] > n[1][0] && n[1][1] > n[1][2]) {\n      copy.data[x][y] = n[1][1];\n    } else {\n      copy.data[x][y] = 0;\n    }\n    if (n[1][1] > n[0][0] && n[1][1] > n[2][2]) {\n      copy.data[x][y] = n[1][1];\n    } else {\n      copy.data[x][y] = 0;\n    }\n  });\n  return copy;\n};\n\nconst hysteresis = (imgData: GrayImageData, ht: number, lt: number) => {\n  const copy = imgData.copy();\n  const isStrong = (edge: number) => edge > ht;\n  const isCandidate = (edge: number) => edge <= ht && edge >= lt;\n  const isWeak = (edge: number) => edge < lt;\n  // discard weak edges, pick up strong ones\n  imgData.eachPixel(3, (x, y, current) => {\n    if (isStrong(current)) copy.data[x][y] = 255;\n    else if (isWeak(current) || isCandidate(current)) copy.data[x][y] = 0;\n  });\n  // traverse over candidate edges connected to strong ones\n  const traverseEdge = (x: number, y: number) => {\n    if (\n      x === 0 ||\n      y === 0 ||\n      x === imgData.width - 1 ||\n      y === imgData.height - 1\n    ) {\n      return;\n    }\n    if (isStrong(copy.data[x][y])) {\n      const neighbours = copy.getNeighbours(x, y, 3);\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (isCandidate(neighbours[i][j])) {\n            copy.data[x - 1 + i][y - 1 + j] = 255;\n            traverseEdge(x - 1 + i, y - 1 + j);\n          }\n        }\n      }\n    }\n  };\n  copy.eachPixel(3, traverseEdge);\n  // discard others\n  copy.eachPixel(1, (x, y, current) => {\n    if (!isStrong(current)) {\n      copy.data[x][y] = 0;\n    }\n  });\n  return copy;\n};\n\nconst detectEdges = (\n  canvas: HTMLCanvasElement,\n  ht = 200,\n  lt = 150,\n  sigma = 1.4,\n  kernelSize = 3\n) => {\n  const imgData = new GrayImageData(canvas.width, canvas.height);\n  imgData.loadCanvas(canvas);\n  return hysteresis(\n    nonMaximumSuppression(sobel(gaussianBlur(imgData, sigma, kernelSize))),\n    ht,\n    lt\n  );\n};\n\nexport { detectEdges };\n","const NUM_ANGLE_CELLS = 360;\n// Precalculate tables.\nconst COS_TABLE = new Array(NUM_ANGLE_CELLS);\nconst SIN_TABLE = new Array(NUM_ANGLE_CELLS);\nfor (\n  let theta = 0, thetaIndex = 0;\n  thetaIndex < NUM_ANGLE_CELLS;\n  theta += Math.PI / NUM_ANGLE_CELLS, thetaIndex++\n) {\n  COS_TABLE[thetaIndex] = Math.cos(theta);\n  SIN_TABLE[thetaIndex] = Math.sin(theta);\n}\n\nconst detectLines = (canvas: HTMLCanvasElement) => {\n  const { width, height } = canvas;\n  const ctx = canvas.getContext(\"2d\");\n  const { data } = ctx!.getImageData(0, 0, width, height);\n  const rhoMax = Math.ceil(Math.sqrt(width * width + height * height));\n  const accum = new Int32Array(rhoMax * NUM_ANGLE_CELLS * 6);\n  // should downsample rather than skip pixels!\n  for (let x = 0; x < width; x += 2) {\n    for (let y = 0; y < height; y += 2) {\n      const isOn = !!data[(y * width + x) * 4];\n      if (isOn) {\n        accumulate(accum, rhoMax, x, y);\n      }\n    }\n  }\n  return { data: accum, width: NUM_ANGLE_CELLS, height: rhoMax };\n};\n\nconst accumulate = (\n  accum: Int32Array,\n  rhoMax: number,\n  x: number,\n  y: number\n) => {\n  for (let thetaIndex = 0; thetaIndex < NUM_ANGLE_CELLS; thetaIndex++) {\n    let rho = rhoMax + x * COS_TABLE[thetaIndex] + y * SIN_TABLE[thetaIndex];\n    rho >>= 1;\n    const i = (rho * NUM_ANGLE_CELLS + thetaIndex) * 6;\n\n    let ax = accum[i];\n    let ay = accum[i + 1];\n    let bx = accum[i + 2];\n    let by = accum[i + 3];\n    let dist = accum[i + 4];\n    let count = accum[i + 5];\n    const axd = ax - x;\n    const ayd = ay - y;\n    const add = axd * axd + ayd * ayd; // don't need to sqrt\n\n    if (!count) {\n      accum[i] = x;\n      accum[i + 1] = y;\n      accum[i + 2] = x;\n      accum[i + 3] = y;\n      // accum[i + 4] = 0;\n      accum[i + 5]++;\n      continue;\n    }\n\n    if (add > dist) {\n      dist = add;\n      ax = ax;\n      ay = ay;\n      bx = x;\n      by = y;\n    }\n\n    if (count > 1) {\n      const bxd = bx - x;\n      const byd = by - y;\n      const bdd = bxd * bxd + byd * byd; // don't need to sqrt\n      if (bdd > dist) {\n        dist = bdd;\n        ax = x;\n        ay = y;\n        bx = bx;\n        by = by;\n      }\n    }\n\n    accum[i] = ax;\n    accum[i + 1] = ay;\n    accum[i + 2] = bx;\n    accum[i + 3] = by;\n    accum[i + 4] = dist;\n    accum[i + 5]++;\n  }\n  // normalize before threshold\n  return accum;\n};\n\nconst threshold = (accum: Int32Array) => {\n  for (let i = 0; i < accum.length; i += 6) {\n    if (accum[i + 5] < 110) {\n      accum[i + 5] = 0;\n    }\n  }\n  return accum;\n};\n\nconst drawLines = (\n  canvas: HTMLCanvasElement,\n  accum: Int32Array,\n  width: number,\n  height: number\n) => {\n  threshold(accum);\n  const ctx = canvas.getContext(\"2d\");\n  ctx!.strokeStyle = \"red\";\n  for (let thetaIndex = 0; thetaIndex < width; thetaIndex++) {\n    for (let rho = 0; rho < height; rho++) {\n      const i = (rho * NUM_ANGLE_CELLS + thetaIndex) * 6;\n      const count = accum[i + 5];\n      if (!count) continue;\n      const ax = accum[i];\n      const ay = accum[i + 1];\n      const bx = accum[i + 2];\n      const by = accum[i + 3];\n      ctx!.moveTo(ax, ay);\n      ctx!.lineTo(bx, by);\n      ctx!.stroke();\n    }\n  }\n};\n\nconst toData = (accum: Int32Array, width: number, height: number) => {\n  const data = new Uint8ClampedArray(width * height * 4);\n\n  for (let i = 0; i < accum.length / 6; i++) {\n    const count = accum[i * 6 + 5];\n    const di = i * 4;\n    data[di] = 0;\n    data[di + 1] = 0;\n    data[di + 2] = 0;\n    data[di + 3] = count;\n  }\n\n  return data;\n};\n\nexport { detectLines, toData, drawLines };\n","import { readImage, writeImageFromBitMatrix, writeImage } from \"./read-image\";\nimport crossword from \"../assets/crossword.jpg\";\nimport backpage from \"../assets/back-page.jpg\";\nimport dog from \"../assets/dog.jpg\";\nimport diagonal from \"../assets/diagonal-hatch.jpg\";\nimport { binarize } from \"./binarize\";\nimport { createContext } from \"./helpers\";\nimport { downsample } from \"./downsample\";\nimport { locate } from \"./locate\";\nimport { detectEdges } from \"./detect-edges\";\nimport { detectLines, toData, drawLines } from \"./detect-lines\";\n\nconst image = createContext();\nconst edge = createContext();\nconst line = createContext();\n\nconst appendCanvas = (canvas: HTMLCanvasElement) => {\n  canvas.style.height = \"auto\";\n  canvas.style.maxWidth = \"600px\";\n  canvas.style.display = \"inline-block\";\n  document.body.appendChild(canvas);\n};\n\n(async () => {\n  const imgData = await readImage(crossword);\n  writeImage(edge, imgData.data, imgData.width, imgData.height);\n  detectEdges(edge.canvas).drawOn(edge.canvas);\n  // const { data, width, height } = downsample(\n  //   imgData.data,\n  //   imgData.width,\n  //   imgData.height\n  // );\n  const lineData = detectLines(edge.canvas);\n  writeImage(\n    line,\n    toData(lineData.data, lineData.width, lineData.height),\n    lineData.width,\n    lineData.height\n  );\n  // const matrix = binarize(data, width, height);\n  // writeImageFromBitMatrix(image, matrix, width, height);\n  writeImage(image, imgData.data, imgData.width, imgData.height);\n  drawLines(image.canvas, lineData.data, lineData.width, lineData.height);\n  // line.canvas.width = image.canvas.width;\n  // line.canvas.height = image.canvas.height;\n  // locate(matrix, width, height, line.ctx);\n  appendCanvas(image.canvas);\n  appendCanvas(line.canvas);\n  appendCanvas(edge.canvas);\n})();\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}